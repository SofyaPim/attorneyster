(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function c(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(e){if(e.ep)return;e.ep=!0;const r=c(e);fetch(e.href,r)}})();const i=new IntersectionObserver(o=>{o.forEach(t=>{t.target.classList.toggle("hide",!t.isIntersecting),t.isIntersecting&&i.unobserve(t.target)})},{threshold:.7});function d(){document.querySelectorAll(".js-animate").forEach(t=>{t.classList.remove("js-animate"),t.classList.add("hide"),setTimeout(()=>{i.observe(t)},500)})}function l(){d()}window.addEventListener("DOMContentLoaded",()=>l(),{once:!0});
